// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlanningsTool.DAL.Contexts;

#nullable disable

namespace PlanningsTool.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240506081837_addTeams")]
    partial class addTeams
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PlanningsTool.DAL.Models.Holiday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Holidays", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pasen"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paasmaandag"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2024, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pinksteren"
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2024, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pinkstermaandag"
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2024, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "O.L.H. Hemelvaart"
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nieuwjaar"
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dag van de arbeid"
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateTime(2024, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nationale feestdag"
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "O.L.V. Hemelvaart"
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateTime(2024, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Allerheiligen"
                        },
                        new
                        {
                            Id = 11,
                            Date = new DateTime(2024, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wapenstilstand"
                        },
                        new
                        {
                            Id = 12,
                            Date = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kermis"
                        });
                });

            modelBuilder.Entity("PlanningsTool.DAL.Models.Nurse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("IsFixedNight")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("RegimeTypeId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("RegimeTypeId");

                    b.HasIndex("TeamId");

                    b.ToTable("Nurses", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Amina",
                            IsFixedNight = "0",
                            LastName = "Woerahfa",
                            RegimeTypeId = 1,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Barbara",
                            IsFixedNight = "0",
                            LastName = "Tamara",
                            RegimeTypeId = 1,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Chaimae",
                            IsFixedNight = "0",
                            LastName = "Dhanitin",
                            RegimeTypeId = 1,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Dalila",
                            IsFixedNight = "0",
                            LastName = "Dhiyah",
                            RegimeTypeId = 1,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Fatima",
                            IsFixedNight = "0",
                            LastName = "Tsridh",
                            RegimeTypeId = 2,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Ghizlane",
                            IsFixedNight = "0",
                            LastName = "Mantazoedh",
                            RegimeTypeId = 2,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Halima",
                            IsFixedNight = "0",
                            LastName = "Hanatt",
                            RegimeTypeId = 2,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Imane",
                            IsFixedNight = "0",
                            LastName = "Azough",
                            RegimeTypeId = 3,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Karima",
                            IsFixedNight = "0",
                            LastName = "Adheswe",
                            RegimeTypeId = 3,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Latifa",
                            IsFixedNight = "1",
                            LastName = "Adhesha",
                            RegimeTypeId = 1,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 11,
                            FirstName = "Mariem",
                            IsFixedNight = "1",
                            LastName = "Sariedh",
                            RegimeTypeId = 1,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 12,
                            FirstName = "Nasira",
                            IsFixedNight = "1",
                            LastName = "Isira",
                            RegimeTypeId = 3,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 13,
                            FirstName = "Alpha",
                            IsFixedNight = "0",
                            LastName = "Zachman",
                            RegimeTypeId = 1,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 14,
                            FirstName = "Bravo",
                            IsFixedNight = "0",
                            LastName = "Youngblood",
                            RegimeTypeId = 1,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 15,
                            FirstName = "Charlie",
                            IsFixedNight = "0",
                            LastName = "Xanthos",
                            RegimeTypeId = 1,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 16,
                            FirstName = "Delta",
                            IsFixedNight = "0",
                            LastName = "Wackerman",
                            RegimeTypeId = 1,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 17,
                            FirstName = "Echo",
                            IsFixedNight = "0",
                            LastName = "Valachovic",
                            RegimeTypeId = 2,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 18,
                            FirstName = "Foxtrot",
                            IsFixedNight = "0",
                            LastName = "Uffelman",
                            RegimeTypeId = 2,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 19,
                            FirstName = "Golf",
                            IsFixedNight = "0",
                            LastName = "Todd",
                            RegimeTypeId = 2,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 20,
                            FirstName = "Hotel",
                            IsFixedNight = "0",
                            LastName = "Scott",
                            RegimeTypeId = 3,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 21,
                            FirstName = "India",
                            IsFixedNight = "0",
                            LastName = "Richardson",
                            RegimeTypeId = 3,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 22,
                            FirstName = "Julliett",
                            IsFixedNight = "1",
                            LastName = "Quintero",
                            RegimeTypeId = 1,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 23,
                            FirstName = "Kilo",
                            IsFixedNight = "1",
                            LastName = "Patterson",
                            RegimeTypeId = 1,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 24,
                            FirstName = "Lima",
                            IsFixedNight = "1",
                            LastName = "Owen",
                            RegimeTypeId = 3,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 25,
                            FirstName = "Nabil",
                            IsFixedNight = "0",
                            LastName = "El Moussaoui",
                            RegimeTypeId = 1,
                            TeamId = 3
                        });
                });

            modelBuilder.Entity("PlanningsTool.DAL.Models.NurseShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("NurseId")
                        .HasColumnType("int");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int>("TeamplanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("NurseId");

                    b.HasIndex("ShiftId");

                    b.HasIndex("TeamplanId");

                    b.ToTable("NurseShifts", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NurseId = 1,
                            ShiftId = 1,
                            TeamplanId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2024, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NurseId = 2,
                            ShiftId = 4,
                            TeamplanId = 1
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2024, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NurseId = 3,
                            ShiftId = 7,
                            TeamplanId = 1
                        });
                });

            modelBuilder.Entity("PlanningsTool.DAL.Models.RegimeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("CountHours")
                        .HasColumnType("decimal(3,1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("RegimeTypes", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountHours = 38.0m,
                            Name = "Voltijds"
                        },
                        new
                        {
                            Id = 2,
                            CountHours = 30.4m,
                            Name = "Deeltijds 4/5"
                        },
                        new
                        {
                            Id = 3,
                            CountHours = 28.8m,
                            Name = "Deeltijds 3/4"
                        },
                        new
                        {
                            Id = 4,
                            CountHours = 19.0m,
                            Name = "Halftijds"
                        });
                });

            modelBuilder.Entity("PlanningsTool.DAL.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<TimeSpan>("Endtime")
                        .HasColumnType("time");

                    b.Property<int>("ShiftTypeId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Starttime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ShiftTypeId");

                    b.ToTable("Shifts", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Endtime = new TimeSpan(0, 15, 0, 0, 0),
                            ShiftTypeId = 1,
                            Starttime = new TimeSpan(0, 7, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            Endtime = new TimeSpan(0, 13, 30, 0, 0),
                            ShiftTypeId = 1,
                            Starttime = new TimeSpan(0, 7, 0, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            Endtime = new TimeSpan(0, 11, 0, 0, 0),
                            ShiftTypeId = 1,
                            Starttime = new TimeSpan(0, 7, 0, 0, 0)
                        },
                        new
                        {
                            Id = 4,
                            Endtime = new TimeSpan(0, 20, 30, 0, 0),
                            ShiftTypeId = 2,
                            Starttime = new TimeSpan(0, 12, 30, 0, 0)
                        },
                        new
                        {
                            Id = 5,
                            Endtime = new TimeSpan(0, 20, 30, 0, 0),
                            ShiftTypeId = 2,
                            Starttime = new TimeSpan(0, 14, 0, 0, 0)
                        },
                        new
                        {
                            Id = 6,
                            Endtime = new TimeSpan(0, 20, 0, 0, 0),
                            ShiftTypeId = 2,
                            Starttime = new TimeSpan(0, 16, 0, 0, 0)
                        },
                        new
                        {
                            Id = 7,
                            Endtime = new TimeSpan(0, 7, 15, 0, 0),
                            ShiftTypeId = 3,
                            Starttime = new TimeSpan(0, 20, 15, 0, 0)
                        });
                });

            modelBuilder.Entity("PlanningsTool.DAL.Models.ShiftType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("ShiftTypes", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Vroege"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Late"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Nacht"
                        });
                });

            modelBuilder.Entity("PlanningsTool.DAL.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Team", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TeamName = "Team Magribien"
                        },
                        new
                        {
                            Id = 2,
                            TeamName = "Team Iromien"
                        },
                        new
                        {
                            Id = 3,
                            TeamName = "New Team"
                        });
                });

            modelBuilder.Entity("PlanningsTool.DAL.Models.Teamplan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Teamplans", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Month = 1
                        },
                        new
                        {
                            Id = 2,
                            Month = 2
                        },
                        new
                        {
                            Id = 3,
                            Month = 3
                        },
                        new
                        {
                            Id = 4,
                            Month = 4
                        },
                        new
                        {
                            Id = 5,
                            Month = 5
                        },
                        new
                        {
                            Id = 6,
                            Month = 6
                        },
                        new
                        {
                            Id = 7,
                            Month = 7
                        },
                        new
                        {
                            Id = 8,
                            Month = 8
                        },
                        new
                        {
                            Id = 9,
                            Month = 9
                        },
                        new
                        {
                            Id = 10,
                            Month = 10
                        },
                        new
                        {
                            Id = 11,
                            Month = 11
                        },
                        new
                        {
                            Id = 12,
                            Month = 12
                        });
                });

            modelBuilder.Entity("PlanningsTool.DAL.Models.Vacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Enddate")
                        .HasColumnType("date");

                    b.Property<int>("NurseId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Startdate")
                        .HasColumnType("date");

                    b.Property<int>("VacationTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("NurseId");

                    b.HasIndex("VacationTypeId");

                    b.ToTable("Vacations", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Enddate = new DateTime(2024, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NurseId = 1,
                            Reason = "Verlofdagje op vrijdag.",
                            Startdate = new DateTime(2024, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VacationTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Enddate = new DateTime(2024, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NurseId = 2,
                            Reason = "Heel de week ziek geweest.",
                            Startdate = new DateTime(2024, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VacationTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Enddate = new DateTime(2024, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NurseId = 3,
                            Reason = "Afwezig.",
                            Startdate = new DateTime(2024, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VacationTypeId = 5
                        },
                        new
                        {
                            Id = 4,
                            Enddate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NurseId = 4,
                            Reason = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse fringilla nibh eu justo ullamcorper iaculis. Quisque at tellus at ex faucibus tempus ac eu nisi. In sapien sapien, pellentesque eu velit a, sodales faucibus urna. Ut est eros, efficitur eu suscipit quis, vulputate a metus. Vestibulum non ullamcorper lectus. Ut aliquam nunc sed arcu laoreet eleifend. Nam venenatis purus ipsum, ut condimentum quam vulputate id. Mauris id orci vel purus convallis volutpat ac sed nibh. Donec vitae dolor in tortor mollis consectetur. Nunc in ante tortor. Mauris sit amet semper lacus. Vivamus lacus neque, sodales id dolor vel, iaculis dictum tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Proin eu dui vel risus aliquam elementum eget id ligula.",
                            Startdate = new DateTime(2024, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VacationTypeId = 5
                        },
                        new
                        {
                            Id = 5,
                            Enddate = new DateTime(2024, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NurseId = 25,
                            Reason = "Afspraak UZA Gastro",
                            Startdate = new DateTime(2024, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VacationTypeId = 2
                        },
                        new
                        {
                            Id = 6,
                            Enddate = new DateTime(2024, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NurseId = 25,
                            Reason = "Afspraak plannen voor Rijbewijs terugkommoment",
                            Startdate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VacationTypeId = 4
                        });
                });

            modelBuilder.Entity("PlanningsTool.DAL.Models.VacationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("VacationTypes", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Verlof"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ziekte"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Arbeidsduurverkorting"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Wens"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Andere"
                        });
                });

            modelBuilder.Entity("PlanningsTool.DAL.Models.Nurse", b =>
                {
                    b.HasOne("PlanningsTool.DAL.Models.RegimeType", "RegimeType")
                        .WithMany()
                        .HasForeignKey("RegimeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlanningsTool.DAL.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegimeType");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("PlanningsTool.DAL.Models.NurseShift", b =>
                {
                    b.HasOne("PlanningsTool.DAL.Models.Nurse", "Nurse")
                        .WithMany()
                        .HasForeignKey("NurseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlanningsTool.DAL.Models.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlanningsTool.DAL.Models.Teamplan", "Teamplan")
                        .WithMany()
                        .HasForeignKey("TeamplanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nurse");

                    b.Navigation("Shift");

                    b.Navigation("Teamplan");
                });

            modelBuilder.Entity("PlanningsTool.DAL.Models.Shift", b =>
                {
                    b.HasOne("PlanningsTool.DAL.Models.ShiftType", "ShiftType")
                        .WithMany()
                        .HasForeignKey("ShiftTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShiftType");
                });

            modelBuilder.Entity("PlanningsTool.DAL.Models.Vacation", b =>
                {
                    b.HasOne("PlanningsTool.DAL.Models.Nurse", "Nurse")
                        .WithMany()
                        .HasForeignKey("NurseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlanningsTool.DAL.Models.VacationType", "VacationType")
                        .WithMany()
                        .HasForeignKey("VacationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nurse");

                    b.Navigation("VacationType");
                });
#pragma warning restore 612, 618
        }
    }
}
